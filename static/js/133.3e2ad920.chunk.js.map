{"version":3,"file":"static/js/133.3e2ad920.chunk.js","mappings":"iPAIe,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,aAAZD,QACR,GAAoCE,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAKA,OAHAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAoBN,GAASO,KAAKH,KACjC,CAACJ,KAEF,wBACGG,EAAWK,SAAyC,IAA9BL,EAAWK,QAAQC,QACxC,qEAEAN,EAAWK,SACXL,EAAWK,QAAQE,KAAI,SAAAC,GAAM,OAC3B,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFJF,EAAOG","sources":["views/Reviews.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from '../services/API';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviesList, setReviesList] = useState([]);\n\n  useEffect(() => {\n    API.getMovieReviews(movieId).then(setReviesList);\n  }, [movieId]);\n  return (\n    <ul>\n      {reviesList.results && reviesList.results.length === 0 ? (\n        <p> We do not have any review for this movie</p>\n      ) : (\n        reviesList.results &&\n        reviesList.results.map(review => (\n          <li key={review.id}>\n            <h3>{review.author}</h3>\n            <p>{review.content}</p>\n          </li>\n        ))\n      )}\n    </ul>\n  );\n}\n"],"names":["Reviews","movieId","useParams","useState","reviesList","setReviesList","useEffect","API","then","results","length","map","review","author","content","id"],"sourceRoot":""}